services:
  nginx: 
    image: nginx
    ports:
      - 9000:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static
      - ./nginx_logs:/var/log/nginx/

  postgresdb:
    image: postgres:alpine
    env_file:
      - .env
    volumes:
      - ./mypostgresql.config:/usr/local/share/postgresql/postgresql.conf
      - ./init.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - pgdata:/var/lib/postgresql/data
  redisdb:
    image: redis
    # volumes:
    #   - ./redis.conf:/usr/local/etc/redis
    # command:
    #   - redis-server /usr/local/etc/redis/redis.conf
  app:
    image: osonwa
    build: 
      context: ./
      dockerfile: ./dockerfiles/compose.dockerfile
    container_name: osonwa
    volumes:
      -  ./:/app/www
      - static_volume:/app/static
    depends_on:
      - postgresdb
      - redisdb
    env_file:
      - .env
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8080:8000

  IOBoundCelery:
    restart: always
    build: 
      context: .
      dockerfile: ./dockerfiles/compose.dockerfile
    command: >
      sh -c "celery -A osonwa worker -l info -P gevent -Q greenqueue -c 100"
    depends_on:
      - postgresdb
      - redisdb
      - app
      - CPUBoundCelery
    volumes:
      - ./:/app/www
    env_file:
      - .env
    container_name: celery

  CPUBoundCelery:
    restart: always
    build: 
      context: .
      dockerfile: ./dockerfiles/compose.dockerfile
    command: >
      sh -c "celery -A osonwa worker -l info -P prefork -c 10  -Q default"
    depends_on:
      - postgresdb
      - redisdb
      - app
    volumes:
      - ./:/app/www
    env_file:
      - .env
    container_name: celery

volumes:
  pgdata:
  access_log:
  error_log:
  static_volume:
